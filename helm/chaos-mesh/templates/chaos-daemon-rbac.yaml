{{- if .Values.chaosDaemon.serviceAccount }}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: {{ .Release.Namespace | quote }}
  name: {{ .Values.chaosDaemon.serviceAccount }}
  labels:
    {{- include "chaos-mesh.labels" . | nindent 4 }}
    app.kubernetes.io/component: chaos-daemon
{{- end}}
{{- if .Values.chaosDaemon.podSecurityPolicy }}
---
# roles
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-chaos-daemon-target-namespace
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "chaos-mesh.labels" . | nindent 4 }}
    app.kubernetes.io/component: chaos-daemon
subjects:
  - kind: ServiceAccount
    name: {{ .Values.chaosDaemon.serviceAccount }}
    # apiGroup: rbac.authorization.k8s.io
    namespace: {{ .Release.Namespace | quote }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-chaos-daemon-psp
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-chaos-daemon-psp
  labels:
    {{- include "chaos-mesh.labels" . | nindent 4 }}
    app.kubernetes.io/component: chaos-daemon
rules:
- apiGroups:
  - policy
  - extensions
  resourceNames:
  - {{ .Release.Name }}-chaos-daemon
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
# Restricted DEFAULT policy
# ( Default policy for all new services )
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ .Release.Name }}-chaos-daemon
  labels:
    {{- include "chaos-mesh.labels" . | nindent 4 }}
    app.kubernetes.io/component: chaos-daemon
spec:
  privileged: false
  allowPrivilegeEscalation: true
  allowedCapabilities:
    - '*'
  hostNetwork: true
  hostPorts:
  - max: 65535
    min: 0
  hostIPC: true
  hostPID: true
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'
{{- end }}

